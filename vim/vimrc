" => VIM user interface

" Indent automatically depending on filetype
" filetype indent on
" filetype plugin on
" set autoindent

set number  					" Turn on line numbering. Turn it off with "set nonu"
nmap <F1> :set invnumber<CR>   " showing number with a key
set hls 						" Highlight search
set hlsearch 					" Hightliht maches
set incsearch					" search as characters are entered
set ruler						" Always show current position
set smartcase					" When searching try to be smart about cases
set magic						" For regular expressions turn magic on
set cursorline					" highlight current line
set showmatch					" highlight matching [{()}]
set clipboard=exclude:.* 		" Open vim faster in SSH connection avoid connect to X server"

" => Colors and Fonts

colorscheme desert
set background=dark
set encoding=utf8				" Set utf8 as standard encoding and en_US as the standard language

" => Files, backups and undo

" Turn backup off, since most stuff is in SVN, git et.c anyway ...
set nobackup
set nowb
set noswapfile

" Return to last edit position when opening files
autocmd BufReadPost *
     \ if line("'\"") > 0 && line("'\"") <= line("$") |
     \   exe "normal! g`\"" |
     \ endif
" Remember info about open buffers on close
set viminfo^=%


" => Indentation
set shiftwidth=4
set softtabstop=4
"set tabstop=4
"set autoindent
"set smartindent
"set smarttab
"set shiftwidth=4
set softtabstop=4
set tabstop=4
set expandtab

" => Misc

" Remove the Windows ^M - when the encodings gets messed up
noremap <Leader>m mmHmt:%s/<C-V><cr>//ge<cr>'tzt'mc

" => Setting color column and vertical line

if exists('+colorcolumn')
    set colorcolumn=85
    highlight ColorColumn ctermbg=DarkCyan
else
    au BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%>80v.\+', -1)
endif

" show empty spaces at the end of the line
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()

set t_Co=256

" => enabling sintax for programming
syntax enable

"Enable delete button on MacOS"
set backspace=indent,eol,start

" Plugins installation: https://opensource.com/article/20/2/how-install-vim-plugins
call plug#begin()
Plug 'preservim/nerdcommenter'
call plug#end()


" Rainbow Parentheses Improved: https://github.com/frazrepo/vim-rainbow
let g:rainbow_active = 1

let g:rainbow_load_separately = [
    \ [ '*' , [['(', ')'], ['\[', '\]'], ['{', '}']] ],
    \ [ '*.tex' , [['(', ')'], ['\[', '\]']] ],
    \ [ '*.cpp' , [['(', ')'], ['\[', '\]'], ['{', '}']] ],
    \ [ '*.{html,htm}' , [['(', ')'], ['\[', '\]'], ['{', '}'], ['<\a[^>]*>', '</[^>]*>']] ],
    \ ]

let g:rainbow_guifgs = ['RoyalBlue3', 'DarkOrange3', 'DarkOrchid3', 'FireBrick']
let g:rainbow_ctermfgs = ['lightblue', 'lightgreen', 'yellow', 'red', 'magenta']

" ============================================================================

" NerdTree: https://github.com/preservim/nerdtree
" Toggle NerdTree with Ctrl + T
map <C-t> :NERDTreeToggle<CR>
" Open a NERDTree automatically when vim starts up
autocmd vimenter * NERDTree

" Switch between the explorer and the file openned
" type: Ctrl + w (twice)
" ============================================================================


" https://github.com/airblade/vim-gitgutter/
" When you make a change to a file tracked by git, the diff markers should appear 
" automatically. The delay is governed by vim's updatetime option; the default 
" value is 4000, i.e. 4 seconds, but I suggest reducing it to around 100ms
set updatetime=100

" Suppress the signs when a file has more than 500 changes, to avoid slowing down the UI.
let g:gitgutter_max_signs = 500  " default value (Vim < 8.1.0614, Neovim < 0.4.0)
let g:gitgutter_max_signs = -1   " default value (otherwise)

" ============================================================================

" References
" https://amix.dk/vim/vimrc.html
" http://dougblack.io/words/a-good-vimrc.html
" https://stackoverflow.com/questions/235439/vim-80-column-layout-concerns
